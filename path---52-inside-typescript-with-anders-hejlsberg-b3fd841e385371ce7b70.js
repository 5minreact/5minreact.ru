webpackJsonp([67727618341622],{497:function(e,t){e.exports={data:{site:{siteMetadata:{title:"Пятиминутка React",author:"Пятиминутка React"}},markdownRemark:{id:"/Users/petr/www/5minreact.ru/src/pages/52-inside-typescript-with-anders-hejlsberg/index.md absPath of file >>> MarkdownRemark",html:'<iframe width="100%" height="166" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/632085261&color=%23ff5500&auto_play=false&hide_related=true&show_comments=true&show_user=true&show_reposts=false&show_teaser=true"></iframe>\n<p>На днях смотрел видео-интервью с записанное на конференции Microsoft Build 2019: Inside TypeScript with Anders Hejlsberg.</p>\n<p>Интересные вопросы, очень живая атмосфера, делаю краткий пересказ.</p>\n<ul>\n<li><a href="https://www.youtube.com/watch?v=tXK50czRbdA">https://www.youtube.com/watch?v=tXK50czRbdA</a></li>\n</ul>',frontmatter:{title:"Inside TypeScript with Anders Hejlsberg",date:"June 05, 2019",featuredImage:null}}},pathContext:{slug:"/52-inside-typescript-with-anders-hejlsberg/",previous:{fields:{slug:"/screencast_y-combinator/"},html:'<div>\n          <div\n            class="gatsby-resp-iframe-wrapper"\n            style="padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem"\n          >\n            <iframe src="https://www.youtube.com/embed/clYMNxScsFQ" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen style="\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          "></iframe>\n          </div>\n          </div>\n<p>Поговорим про Y-комбинатор. Но не про одноимённый стартап акселератор, а про особый приём из мира функционального программирования и лямбда-исчесления.</p>\n<p>Задачу данного упражнения можно сформулировать следующим образом: реализовать рекурсию без объявления переменных и именованных функций, используя только анонимные функции и их аргументы.</p>\n<ul>\n<li><a href="https://habr.com/post/118927/">https://habr.com/post/118927/</a></li>\n<li><a href="http://kestas.kuliukas.com/YCombinatorExplained/">http://kestas.kuliukas.com/YCombinatorExplained/</a></li>\n<li><a href="https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%B1%D0%B8%D0%BD%D0%B0%D1%82%D0%BE%D1%80_%D0%BD%D0%B5%D0%BF%D0%BE%D0%B4%D0%B2%D0%B8%D0%B6%D0%BD%D0%BE%D0%B9_%D1%82%D0%BE%D1%87%D0%BA%D0%B8">Комбинатор неподвижной точки на Википедии</a></li>\n</ul>',excerpt:"Поговорим про Y-комбинатор. Но не про одноимённый стартап акселератор, а про особый приём из мира функционального программирования и лямбда…",frontmatter:{title:"Y-комбинатор на JavaScript - скринкаст",date:"January 4, 2019",featuredImage:null}},next:null}}}});
//# sourceMappingURL=path---52-inside-typescript-with-anders-hejlsberg-b3fd841e385371ce7b70.js.map